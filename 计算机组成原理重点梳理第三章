第三章
  1.流水线技术的特点
    1.把一个处理过程分解为若干个子过程
    2.各段时间尽可能相等
    3.每一段后要有缓冲寄存器
    4.适合大量重复的时序过程
    5.要有通过时间和排空时间
  2.流水线的分类
    1.用于计算机系统的等级不同
      1.部件级流水线：将处理机中的部件分段
      2.处理机级流水线：又称指令流水线，将一条指令分为若干子过程
      3.系统级流水线：多个处理机串行连接，共同完成任务
    2.功能
      1.单功能流水线
      2.多功能流水线
        1.静态流水线
          同一时间内，流水线中各段只能处理同一种功能。
          切换功能时，必须等前面的任务全部流出流水线才能改变连接。
        2.动态流水线
          同一时间内，各段可以按照不同的方式连接。
          优点：更灵活，能提高各段使用率，提高处理速度
          缺点：控制复杂度增加
        3.是否存在反馈回路
          1.线性流水线：不存在反馈
          2.非线性流水线：存在反馈
            /*要确定什么时间向流水线引入新任务，才能使该任务不会与先前进入流水线的任务发生争用流水线的冲突*/
        4.流入与流出顺序是否相同
          1.顺序流水线
          2.乱序流水线：无序流水线，错序流水线，异步流水线
  3.流水线的画法
  /*另附文件*/
  4.流水线性能指标
  5.流水线冲突
    分类：
      1.结构冲突：因资源冲突而不能正常执行
      /*重复设置足够多的资源来解决*/
      2.数据冲突：靠的太近，指令读/写操作数的顺序改变
        1.写后读
        /*在写入之前就去读，导致读出是旧值*/
        2.写后写
        /*先后写，先写的被覆盖*/
        3.读后写
        /*在读之前就写，导致本该读的值被覆盖了*/
      3.控制冲突
3.分支延迟
  1.由分支指令引起的延迟叫做分支延迟
  2.减少分支延迟的方法
    1.在流水线中尽早的判断出分支是否成功
    2.尽早的计算出分支目标地址
    /*假设A，B两个老师都布置了作业，但仅有一人的需要完成，怎样能最早完成？因为A老师很有可能会布置作业，故开始写A，一旦真的是A布置的，那么速度会很快；要是B布置的，就重新开始写B，速度
    相比等待作业布置后再开始时间上相等。重复多次，平均完成就比较快。但是任务量大，不过不怕cpu任务多，就怕它闲*/
3.延迟分支
  1.主要思想
    从逻辑上延长分支指令的执行时间。把延迟分支看成由原来的分支指令和若干个延迟槽构成。
    不管分支是否成功，都要顺序执行延迟槽里的指令。延迟槽一般为一个。
    放入延迟槽的指令是由编译器来选择的。
    延迟分支是否能带来好处完全取决于编译器能否把有用的指令调度到延迟槽中。
    三种常见的调度：
      1.从前调度
      2.从后调度
      3.从目标处调度
    如何提高延迟槽放入有用指令的能力？
      分支取消：
        分支指令隐含了预测的分支执行方向。
        当分支的实际执行方向和实现预测的一致，执行分支延迟槽中的指令；
        否则就将该指令转换为空操作。
