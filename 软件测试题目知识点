1.边界值分析法
  在某个输入输出范围的边界上，验证系统功能是否正常运行。
  对不严格的语言更能发挥作用。
  缺点：对布尔型和逻辑变量无效，也不能很好的测试不同的输入组合。
  取值：
    边界值 和 刚刚超过边界值的值
    1.  1<x<99
    0 1 99 100
    2.  1<=x<=99
    0 1 99 100
    3.{0 1 2 3 4 5}
    0 5
2.兼容性测试
  包括
    1.软件兼容性测试
      1.向后兼容：兼容以前版本
      2.向前兼容：兼容未来版本
    2.数据共享兼容性测试
      1.剪切、复制和粘贴
      2.文件的存取
          文件的数据必须符合标准。
          通用的数据交换的格式有：XML，JSON，Google Protocol Buffers和LDIF
      3.文件的导入和导出
      
    3.硬件兼容性测试
  3.验收测试
    前提：系统或软件已通过了内部测试，即从软件组织开发来看，所有要做的测试都已完成，多发现的严重错误都已修正
    白盒
    分为α测试和β测试
    均需要用户参与
    1.α测试：用户在开发测试下
    2.β测试：用户在实际运行环境下
 3.集成测试
  白盒黑盒相结合
  主要是对接口的测试
  一个好的集成测试应具备的特点：
    1.能够使模块和接口的划分清晰明了，尽可能减少后续操作难度
    2.能够对被测模块进行比较充分的测试
    3.对整体工作量来说，参加测试的各种资源都得到充分的应用。
  模式的选择
    渐增式，非渐增式
    1.渐增式需要的编写的软件多，测试量大
    2.渐增式发现模块间接口错误早
    3.渐增式过程中发现错误，错误往往与最近加进来的模块有关；非渐增式发现错误，难以诊断
    4.渐增式更彻底
    5.渐增式需要更多的机器时间
    6.使用非渐增式，可以并行测试
    *一般采用渐增式，具体实践
      1.自顶向下
        优点：不需要测试驱动程序；
          能够在测试早期实现并验证系统的主要功能
         能在早期发现上层接口的错误
        缺点：需要桩程序；
          /*代替被测模块的子模块*/
          底层模块中的错误发现的晚；
         在早期无法充分展开人力
      2.自底向上
        与之相反，需要驱动程序
      3.混合策略
4.压力测试
  也称强度测试、负载测试
  压力测试是模拟适应应用的软硬件及用户使用过程中的系统负荷，长时间或超大负荷地运行测试软件，来测试被测系统的性能、可靠性、稳定性
  本质是测试者想要破坏程序。
5.容量测试
  预先分析出反应软件系统应用特征的某项指标的极限值，如某个web站点课支持的多少个并发用户的访问量。网络在线会议系统
  的与会人数。若不满足要求，寻求新的方案，提高系统容量。
6.发现安全性漏洞最常用的测试方法
  1.模糊测试
  2.渗透测试
  3.威胁模式与攻击树
  /*静态代码分析方法
    动态的渗透测试*/
  /*基于代码的安全测试、形式化安全测试方法，模糊测试方法*/
  /*基于属性的测试，动态污点分析法，威胁树和攻击树理论*/
7.安全性测试
  安全性与可靠性联系紧密
  但是安全性包括了在在非正常条件下不发生安全事故的能力。
    1.安全功能测试
    2.安全漏洞厕所
    /*没有不可攻入的系统，要使攻击者无利可图*/
   两种级别的安全性
    1.应用程序级别的安全性
    2.系统级别的安全性
8.系统的性能指标
  1.请求响应时间
  2.数据吞吐量
  3.负载数据量
9.因果图 方法时依据输出对输入的依赖关系设计的
10.逻辑覆盖
  1.判定覆盖
    运行被测程序，使得程序中每个判断的取真分支和取假分支至少经历一次，即判断真假值都曾被满足。
    完成了判定覆盖，也就完成了语句覆盖。
  2.条件覆盖
    使每个条件的取值至少满足一次
  3.判定-条件覆盖
    判断条件中的所有条件可能的取值至少执行一次
    所有判断的可能结果至少执行一次
  4.条件组合覆盖
    判断中每个条件的所有可能取值至少出现一次
    并且判断本身的判断结果也至少出现一次
  5.基本路径覆盖
8.逻辑覆盖的强度
  语句覆盖和条件覆盖比较弱
  判定/条件覆盖 条件组合覆盖比较强
9.单元测试工具
  Junit GoogleTest TestNG
  *MockEJB轻量级框架
10.银行贷款系统验证贷款者申请贷款时，通过为每个业务评估规则设置“正确”或“”错误’的组合作为条件输入，以便验证是否同意贷款
  最适合使用 决策表 的方法
11.测试设计和测试执行同时进行的是：
  探索性测试
12.专业的性能测试工具
  loadRunner
13.MC/DC修正判定条件覆盖
  介于判定=条件覆盖和条件组合覆盖
14.圈复杂度的计算
  1.e-n+2；边数-节点数+2
  2.判定节点数+1
  3.被划分的区域块数
13.
