1.流水线按级别可划分为
  部件级流水线
  处理机级流水线
  处理机间流水线
2.什么是动态流水线
  在同一时间内，多功能流水线中各段可以按照不同的方式连接，同时执行多种功能
3.什么是流水线的瓶颈，解决方法？
  流水线中 时间最长的段 称为流水线的瓶颈
  解决方法：
    细分瓶颈段
    重复设置瓶颈段
4.什么是指令的数据冲突？
  当指令在流水线中重叠执行时，因需要用到前面指令的执行结果而产生的冲突
5.如何解决数据冲突引起的停顿？
  使用 定向技术
  /*又称 旁路或短路*/
  关键思想：
    在某条指令产生计算结果之前，其他指令并不真正立即需要该计算结果，如果能够将该计算结果从其产生的地方直接送到其他指令需要他的地方，那么久可以避免停顿。
6.流水线技术的特点
  1.把一个处理过程分解为若干个子过程，每个子过程有一个专门的功能部件来实现
  2.流水线中各段的时间应尽可能相等，否则将引起流水线堵塞、断流
  3.流水线的每一个功能部件后都要有一个缓冲寄存器称为流水寄存器
  4.适合大量重复的时序过程，只有在输入端不断的提供任务，才能充分发挥流水线的效率
  5.流水线需要有通过时间和排空时间
7.流水线计算
  1.动态or静态？
  2.解决策略
  3.对应画图
  4.性能
    吞吐率：任务量/时间
    加速比：不使用流水线所需时间/使用此流水线时间
    效率：数格子。已画格子/所在矩形（刚好包括所有已画格子的矩形）格子数
8.指令操作码优化后，如果使用 长度和个数固定的地址码，指令字会出现空闲区
9.数据表示是指 计算机硬件能够直接识别、指令系统可以直接调用 的数据类型。
10.指令系统发展和改进的两个方向
  1.增强指令的功能
  2.尽量简化指令的功能
11.RISC设计的基本原则
  1.指令条数小，指令功能简单
  2.采用简单统一的指令格式，并减少寻址方式，指令长度都为32位或64位
  3.指令的执行在单周期内完成
  4.采用load-store结构
  5.大多数指令都采用硬连逻辑实现
  6.强调优化编译器的作用
  7.充分利用流水技术来提高性能
12.比较冯诺依曼和哈佛体系
   1.冯-代码与数据统一编址
   2.哈佛-独立编址
13.流水线技术的特点
  1.把一个处理过程分解为若干个子过程
  2.各段的时间尽可能相等
  3.每一段后有一个缓冲寄存器
  4.需要有通过时间和排空时间
  5.适合大量重复的时序工作
14.什么是流水线的瓶颈段
  当流水线各段不相等时，时间最长的那段就成了瓶颈段。
  /*设计流水线时，应使各段尽可能相等*/
15.流水线如何减少数据冲突引起的停顿？其主要思想是什么？
  使用定向技术。
  思想：
    在发生写后读冲突时，在计算结果尚未出现之前，后面等待使用该结果的指令并不见得马上就要用到该结果。
    如果能够将该计算结果从产生的地方直接送到其他指令需要它的地方。
16.替换算法有哪几种？
  随机法：
    简单，易硬件实现
    没有考虑Cache过去的使用情况，反应不了程序的局部性，命中率较低。
  先进先出：
    容易实现
    不能正确反应程序的局部性，最早进入的块也有可能是经常用的块。
  最近最少使用法：
    较好的反应了程序的局部性，命中率较高。
    实现比较复杂
17.Cache-主存 与 主存-辅存 的比较
   目的不同
    1.弥补主存速度不足
    2.弥补主存控件不足
   存储管理的实现
    1.全部硬件
    2.主要软件
   访问速度比：
    1.几
    2.几万
   块大小
    1.几十到几百字节
    2.几千字节以上
   对第二级的访问
    1.可直接访问
    2.均要通过第一级
   不命中CPU是否切换
    1.不切换
    2.切换到其他进程
 18.计算机性能提高的因素
  1.计算机制造技术的发展
  2.计算机系统结构的创新
 19.冯诺依曼计算机的设计思想
  1.计算机由五大部件组成。
  /*哪五大部件？*/
  2.采用存储程序方式
  3.二进制表示
 20.计算机的层次
  微程序机器->传统机器语言机器->操作系统机器->汇编语言机器->高级语言机器->应用语言机器
 21.比较解释和翻译
  解释：运行速度慢，占存储空间少
  翻译：运行速度快，占内存空间大
 22.计算机体系结构
  传统机器程序员所能看到的计算机的属性，即概念性结构和功能特性。
 23.透明性
  数据通路带宽对系统程序员透明，对应用程序员透明；
  虚拟存储器对系统程序员不透明，对应用程序员透明。
 24.指令系统的确定属于 系统结构；
    乘法指令是由专门的硬件实现，还是移位加法来实现属于 计算机组成。
    /*计算机系统结构是软硬件的界面. 外特性.
    计算机组成是计算机系统结构的逻辑实现,内特性。
    计算机实现是计算机组成的物理实现。
    一种体系结构可以有多种组成。一种组成可以有多种实现。*/
    /*实现->组成->系统结构*/
    是否要设乘法指令->计算机系统结构
    乘法指令是用专门的高速乘法器还是用加法器和移位器实现->计算机组成
    乘法器、加法器的物理显示，如器件的类型，集成度，数量的确定和选择->计算机实现
    
    主存容量与编址方式的确定----系统结构
    主存速度的确定、逻辑结构的模式---组成
    器件的选定、电路的设计、组装技术---实现
    
    关系
      1.计算机组成是计算机系统结构的逻辑实现
      2.计算机实现是计算机组成的物理实现
        
