第五章
  1.指令级并行
    指令之间存在的一种并行性，利用它，计算机可以并行执行两条或两条以上的指令
    开发途径：
      1.重复设置资源
      2.采用流水线技术
       /*使指令重叠并执行*/
    是提高计算机性能的一种重要方法
  2.无法并行？
    两条指令相关，则不能并行执行，或只能部分重叠执行
    相关的三种类型：
      数据相关  名相关 控制相关
    流水线冲突：
      由于相关的存在，使得指令级中的下一条指令不能再指定的时钟周期执行。
      三种类型：
        1.结构冲突：硬件资源冲突
        2.数据冲突：数据相关和名相关
        3.控制冲突：控制相关
          对于提升性能来说，控制相关并非是一个主要的限制。
          /*若不遵守其依赖关系，只要结果正确，就可以这么做*/
          为了保证正确性，要保持最关键的两点
          1.数据流：数据值从其生产者指令到其消费者指令的实际流动
          2.异常行为：指令顺序的改变不能导致程序中发生新的异常
          /*若不遵守控制相关，既不影响异常行为，也不改变数据流，就可以进行指令调度，将失败分支中的指令调度到分支指令前面，即前瞻执行*/
    为什么会有相关？
      相关是程序的固有属性，他反映了程序中指令的相互依赖关系。
      具体的一次相关是否会导致实际冲突的发生以及该冲突会带来多长的停顿，则是流水线的属性。
    程序顺序：原来的程序确定的在完全串行方式下指令的执行顺序。
      尽可能的开发并行性，只在可能会导致错误的情况下，才保持程序顺序。
    如何克服限制：
      1.保持相关，但避免发生冲突
        指令调度
        
      2.进行代码转换，消除相关
